name: macOS Android Tester

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 360
    steps:
      - name: "1. Descargar repositorio"
        uses: actions/checkout@v4

      - name: "2. Instalar Tailscale y configurar usuario"
        run: |
          # Instalar Tailscale en macOS
          curl -fsSL https://tailscale.com/install.sh | sh
          
          # Configurar contrase√±a para el usuario (formato macOS)
          sudo dscl . -passwd /Users/runner runnerpass
          
          # Habilitar SSH en macOS
          sudo systemsetup -setremotelogin on

      - name: "3. Conectar Tailscale y mostrar datos"
        run: |
          # Conectar a Tailscale
          sudo tailscale up --authkey=tskey-auth-kBU3f1HEM721CNTRL-ZwRrWsEkEhLYV6GgDopDhL6hKCgVjrDs --hostname=github-macos
          
          echo "--------------------------------------------------------------------"
          echo "CONEXI√ìN POR TAILSCALE (SSH):"
          echo "ssh runner@$(tailscale ip -4)"
          echo "CONTRASE√ëA: runnerpass"
          echo "--------------------------------------------------------------------"
          echo "Sistema: macOS $(sw_vers -productVersion)"

      - name: "4. Mantener sesi√≥n activa"
        run: |
          echo "üñ•Ô∏è macOS listo para Android emulation"
          echo "üì° IP: $(tailscale ip -4)"
          
          # Mantener sesi√≥n activa
          while true; do
            echo "$(date): Sesi√≥n macOS activa..."
            sleep 60
          done

      - name: "5. Guardar cambios"
        if: always()
        run: |
          git config --global user.name 'GitHub Actions macOS'
          git config --global user.email 'actions@github.com'
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Guardado autom√°tico desde macOS" && git push
          fi
